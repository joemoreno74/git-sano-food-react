[{"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/reportWebVitals.js":"1","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/index.js":"2","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/Main.js":"3","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/Header.js":"4","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/App.js":"5","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/FoodMenu.js":"6","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/shared/SanoMenu.js":"7","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/ContactUs.js":"8","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/Locations.js":"9","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/shared/SanoLocations.js":"10"},{"size":362,"mtime":1609607370727,"results":"11","hashOfConfig":"12"},{"size":695,"mtime":1610317476453,"results":"13","hashOfConfig":"12"},{"size":439,"mtime":1610317817922,"results":"14","hashOfConfig":"12"},{"size":4246,"mtime":1610372777419,"results":"15","hashOfConfig":"12"},{"size":401,"mtime":1609760554315,"results":"16","hashOfConfig":"12"},{"size":3845,"mtime":1610360303666,"results":"17","hashOfConfig":"12"},{"size":1768,"mtime":1609964169822,"results":"18","hashOfConfig":"12"},{"size":9672,"mtime":1610316389906,"results":"19","hashOfConfig":"12"},{"size":2081,"mtime":1610372299224,"results":"20","hashOfConfig":"12"},{"size":1717,"mtime":1610371412726,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pku313",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/reportWebVitals.js",[],["46","47"],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/index.js",[],["48","49"],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/Main.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/Header.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/App.js",[],["50","51"],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/FoodMenu.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/shared/SanoMenu.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/ContactUs.js",["52","53","54","55","56"],"import React, { Component }  from 'react';\nimport {  Button, Label, Container, Row, Col } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInstagram, faFacebook } from '@fortawesome/free-brands-svg-icons';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass ContactUs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (values) => {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\nrender (){ \n        return (\n            <React.Fragment>\n                <Container fluid=\"sm\">   \n                    <Row>\n                      <Col>\n                            <h1 className=\"text-center\">Get In Touch With Us</h1> \n                            <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                            placeholder=\"First Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, \n                                                minLength: minLength(2),\n                                                maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".firstName\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be at least 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                            placeholder=\"Last Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required,\n                                                minLength: minLength(2),\n                                                maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".lastName\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be at least 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                            placeholder=\"Phone number\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required,\n                                                minLength: minLength(10),\n                                                maxLength: maxLength(15),\n                                                isNumber\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".phoneNum\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be at least 10 numbers',\n                                                maxLength: 'Must be 15 numbers or less',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                            placeholder=\"Email\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required,\n                                                validEmail\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".email\"\n                                            show=\"touched\"\n                                            component=\"div\"\n                                            messages={{\n                                                required: 'Required',\n                                                validEmail: 'Invalid email address'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>        \n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                            rows=\"12\"\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size: 10, offset: 2}}>\n                                        <Button type=\"submit\" color=\"success\">\n                                            Send Feedback\n                                        </Button>\n                                    </Col>\n                                </Row>                                          \n                            </LocalForm>\n                        </Col>  \n                    </Row>\n                 </Container>   \n                 <Container fluid=\"sm\">   \n                    <Row>\n                      <Col>\n                        <h1 className=\"text-center\">Our Social Networks</h1>\n                            <div className=\"col-md-10 mx-auto text-center\">\n                                <Button outline className=\"fa-lg\"><FontAwesomeIcon icon={faInstagram} size=\"3x\" color=\"black\" /></Button> \n                                {' '}\n                                <Button outline className=\"fa-lg\"><FontAwesomeIcon icon={faFacebook} size=\"3x\" color=\"black\" /></Button> \n                             </div>  \n                        </Col>  \n                    </Row>\n                 </Container>          \n            </React.Fragment>\n    );\n}\n}\nexport default ContactUs;","/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/components/Locations.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/git-sano-food-react/src/shared/SanoLocations.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"61"},{"ruleId":"59","replacedBy":"62"},{"ruleId":"57","replacedBy":"63"},{"ruleId":"59","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":48,"column":37,"nodeType":"67","endLine":56,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":73,"column":41,"nodeType":"67","endLine":81,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":98,"column":41,"nodeType":"67","endLine":107,"endColumn":43},{"ruleId":"65","severity":1,"message":"66","line":125,"column":41,"nodeType":"67","endLine":132,"endColumn":43},{"ruleId":"65","severity":1,"message":"68","line":148,"column":41,"nodeType":"67","endLine":151,"endColumn":43},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],["69"],["70"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]